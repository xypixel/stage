{"mappings":"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","sources":["src/Config.ts","src/collision.ts","src/geometry.ts","src/Buttons.ts","src/Screen.ts","examples/console.ts","src/Console.ts"],"sourcesContent":["export const defaults = {\n  dev: {\n    allowFullscreen: true,\n    allowPreventContextMenu: true,\n    allowTouchPreventDefault: true,\n    allowKeyboardPreventDefault: true,\n    allowWarnOnReload: true\n  }\n}\n\nexport default class Config {\n  public dev: {\n    allowFullscreen: boolean;\n    allowPreventContextMenu: boolean;\n    allowTouchPreventDefault: boolean;\n    allowKeyboardPreventDefault: boolean;\n    allowWarnOnReload: boolean;\n  };\n\n  constructor (params: Partial<Config> = {}) {\n    this.dev = { ...defaults.dev, ...params.dev };\n  }\n}\n","import { Point, Rect } from \"./geometry\";\n\nexport function hitCheckPointRect (point: Point, rect: Rect): boolean {\n  return point.x > rect.x && point.x < rect.right && point.y > rect.y && point.y < rect.bottom;\n}\n","export class Point {\n  public x: number;\n  public y: number;\n\n  constructor (x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nexport class Rect {\n  public height: number;\n  public width: number;\n  public x: number;\n  public y: number;\n\n  constructor (x: number, y: number, width: number, height: number) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  public get bottom (): number {\n    return this.y + this.height;\n  }\n\n  public get left (): number {\n    return this.x;\n  }\n\n  public get right (): number {\n    return this.x + this.width;\n  }\n\n  public get top (): number {\n    return this.y;\n  }\n}\n","import { hitCheckPointRect } from \"./collision\";\nimport Config from \"./Config\";\nimport { Point } from \"./geometry\";\n\nenum DPadButtons {\n  Up = 'Up',\n  Lt = 'Lt',\n  Dn = 'Dn',\n  Rt = 'Rt',\n  Center = 'Center',\n  LtUp = 'LtUp',\n  LtDn = 'LtDn',\n  RtUp = 'RtUp',\n  RtDn = 'RtDn'\n}\n\ninterface DPadButtonItem {\n  name: DPadButtons;\n  element: HTMLDivElement | null;\n}\n\nexport interface ButtonsParams {\n  config: Config;\n}\n\nexport default class Buttons {\n  private config: Config;\n\n  public dPadElement: HTMLDivElement;\n  public dPadButtons: DPadButtonItem[] = [\n    {\n      name: DPadButtons.LtUp,\n      element: null\n    },\n    {\n      name: DPadButtons.Up,\n      element: null\n    },\n    {\n      name: DPadButtons.RtUp,\n      element: null\n    },\n    {\n      name: DPadButtons.Lt,\n      element: null\n    },\n    {\n      name: DPadButtons.Center,\n      element: null\n    },\n    {\n      name: DPadButtons.Rt,\n      element: null\n    },\n    {\n      name: DPadButtons.LtDn,\n      element: null\n    },\n    {\n      name: DPadButtons.Dn,\n      element: null\n    },\n    {\n      name: DPadButtons.RtDn,\n      element: null\n    }\n  ];\n  \n  public actionBtnsElement: HTMLDivElement;\n  public actionBtnIElement: HTMLDivElement;\n  public actionBtnIIElement: HTMLDivElement;\n\n  public powerBtnElement: HTMLDivElement;\n  public settingsBtnElement: HTMLDivElement;\n\n  public readonly isLtUpPressed: boolean = false;\n  public readonly isUpPressed: boolean = false;\n  public readonly isRtUpPressed: boolean = false;\n  public readonly isLtPressed: boolean = false;\n  public readonly isRtPressed: boolean = false;\n  public readonly isLtDnPressed: boolean = false;\n  public readonly isDnPressed: boolean = false;\n  public readonly isRtDnPressed: boolean = false;\n\n  constructor (params: ButtonsParams) {\n    this.config = params.config;\n\n    this.dPadElement = document.querySelector('#dPad')!;\n\n    this.dPadButtons.forEach((item) => {\n      item.element = document.querySelector(`#${item.name}`);\n    });\n\n    this.actionBtnsElement = document.querySelector('#actionBtns')!;\n    this.actionBtnIElement = document.querySelector('#actionBtnI')!;\n    this.actionBtnIIElement = document.querySelector('#actionBtnII')!;\n\n    this.powerBtnElement = document.querySelector('#powerBtn')!;\n    this.settingsBtnElement = document.querySelector('#settingsBtn')!;\n  }\n  \n  private setActiveDPadElements (item: DPadButtonItem): void {\n    if (item.name === DPadButtons.LtUp) {\n      this.dPadButtons.find((item) => item.name === DPadButtons.Lt)?.element?.classList.add('active');\n      this.dPadButtons.find((item) => item.name === DPadButtons.Up)?.element?.classList.add('active');\n    } else if (item.name === DPadButtons.RtUp) {\n      this.dPadButtons.find((item) => item.name === DPadButtons.Rt)?.element?.classList.add('active');\n      this.dPadButtons.find((item) => item.name === DPadButtons.Up)?.element?.classList.add('active');\n    } else if (item.name === DPadButtons.LtDn) {\n      this.dPadButtons.find((item) => item.name === DPadButtons.Lt)?.element?.classList.add('active');\n      this.dPadButtons.find((item) => item.name === DPadButtons.Dn)?.element?.classList.add('active');\n    } else if (item.name === DPadButtons.RtDn) {\n      this.dPadButtons.find((item) => item.name === DPadButtons.Rt)?.element?.classList.add('active');\n      this.dPadButtons.find((item) => item.name === DPadButtons.Dn)?.element?.classList.add('active');\n    } else {\n      item.element?.classList.add('active');\n    }\n  }\n\n  public powerOn (): void {\n    this.powerBtnElement.classList.remove('off');\n    this.powerBtnElement.classList.add('on');\n  \n    this.dPadElement.addEventListener('touchstart', (event) => {\n      this.setActiveDPadElements(this.dPadButtons.find((item) => item.name === (event.target as HTMLElement).id)!);\n    }, false);\n    this.dPadElement.addEventListener('touchmove', (event: TouchEvent) => {\n      if (this.config.dev.allowTouchPreventDefault) {\n        event.preventDefault();\n      }\n\n      this.dPadButtons.forEach((item) => {\n        item.element?.classList.remove('active');\n      });\n  \n      const firstTouch = event.touches[0];\n      \n      this.dPadButtons.forEach((item) => {\n        if (hitCheckPointRect(new Point(firstTouch.pageX, firstTouch.pageY), item.element!.getBoundingClientRect())) {\n          this.setActiveDPadElements(item);\n        }\n      });\n    }, false);\n    this.dPadElement.addEventListener('touchend', (event) => {\n      this.dPadButtons.forEach((item) => {\n        item.element?.classList.remove('active');\n      });\n    }, false);\n  \n    this.actionBtnsElement.addEventListener('touchstart', (event) => {\n      (event.target as HTMLElement).classList.add('active');\n    }, false);\n    this.actionBtnsElement.addEventListener('touchmove', (event: TouchEvent) => {\n      if (this.config.dev.allowTouchPreventDefault) {\n        event.preventDefault();\n      }\n\n      const firstTouch = event.touches[0];\n\n      this.actionBtnIElement.classList.remove('active');\n      this.actionBtnIIElement.classList.remove('active');\n      \n      if (hitCheckPointRect(new Point(firstTouch.pageX, firstTouch.pageY), this.actionBtnIElement.getBoundingClientRect())) {\n        this.actionBtnIElement.classList.add('active');\n      } else if (hitCheckPointRect(new Point(firstTouch.pageX, firstTouch.pageY), this.actionBtnIIElement.getBoundingClientRect())) {\n        this.actionBtnIIElement.classList.add('active');\n      }\n    }, false);\n    this.actionBtnsElement.addEventListener('touchend', (event) => {\n      (event.target as HTMLElement).classList.remove('active');\n    }, false);\n  }\n}\n","export default class Screen {\n  public dimensions: number = 256;\n  public element: HTMLCanvasElement;\n  public context: CanvasRenderingContext2D;\n  public pixelScale: number = 1;\n  public antiAliasingScaleThreshold = 4;\n\n  constructor () {\n    this.element = document.querySelector('#screen')!;\n    this.context = this.element.getContext('2d')!;\n    this.context.imageSmoothingEnabled = false;\n    this.context.imageSmoothingQuality = 'low';\n  }\n\n  public setPixelScale (calculatedScreenDimensions: number): void {\n    const scale = calculatedScreenDimensions / this.dimensions;\n    this.pixelScale = scale > this.antiAliasingScaleThreshold ? Math.floor(scale) : scale;\n  }\n}\n","import Config from \"~src/Config\";\nimport Console from \"../src/Console\";\n\nconst config = new Config({\n  dev: {\n    allowFullscreen: true,\n    allowPreventContextMenu: true,\n    allowKeyboardPreventDefault: false,\n    allowTouchPreventDefault: true,\n    allowWarnOnReload: false\n  }\n});\n\nnew Console({\n  config\n});\n","import Buttons from \"./Buttons\";\nimport Config from \"./Config\";\nimport Screen from \"./Screen\";\n\nexport interface ConsoleParams {\n  config: Config;\n}\n\nexport default class Console {\n  private config: Config;\n\n  public buttons: Buttons;\n  public screen: Screen;\n\n  private containerElement: HTMLDivElement;\n  private leftConElement: HTMLDivElement;\n  private rightConElement: HTMLDivElement;\n\n  private calculatedScreenDimensions: number = 256;\n  private isPoweredOn: boolean = false;\n\n  constructor (params: ConsoleParams) {\n    this.config = params.config;\n\n    this.buttons = new Buttons({ config: this.config });\n    this.screen = new Screen();\n\n    this.containerElement = document.querySelector('#xypixel')!;\n    this.leftConElement = document.querySelector('#leftCon')!;\n    this.rightConElement = document.querySelector('#rightCon')!;\n\n    const handleInitialInteraction = (event: Event): void => {\n      if (!this.isPoweredOn) {\n        if (this.config.dev.allowFullscreen) {\n          document.documentElement.requestFullscreen();\n        }\n        if (this.config.dev.allowPreventContextMenu) {\n          document.addEventListener('contextmenu', e => e.preventDefault());\n        }\n        if (this.config.dev.allowWarnOnReload) {\n          window.onbeforeunload = () => true;\n        }\n\n        this.powerOn();\n      }\n    }\n\n    document.addEventListener('keydown', handleInitialInteraction, false);\n    document.addEventListener('touch', handleInitialInteraction, false);\n    document.addEventListener('click', handleInitialInteraction, false);\n\n    this.calculatePositionAndScale();\n\n    window.addEventListener('resize', () => {\n      this.calculatePositionAndScale();\n    }, false);\n    window.addEventListener('deviceorientation', () => {\n      this.calculatePositionAndScale();\n    }, false);\n  }\n\n  private calculatePositionAndScale (): void {\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const viewportIsLandscape = viewportWidth > viewportHeight;\n    \n    this.calculatedScreenDimensions = Math.floor(\n      viewportIsLandscape ?\n        viewportWidth / viewportHeight < 2 ? viewportWidth / 2 : viewportHeight :\n        viewportHeight / viewportWidth < 2 ? viewportHeight / 2 : viewportWidth\n    );\n\n    this.screen.setPixelScale(this.calculatedScreenDimensions);\n\n    if (this.calculatedScreenDimensions / this.screen.dimensions > this.screen.pixelScale) { // ie: anti aliasing threshold exceeded\n      this.calculatedScreenDimensions = this.screen.dimensions * this.screen.pixelScale;\n    }\n\n    this.screen.element.width = this.calculatedScreenDimensions;\n    this.screen.element.height = this.calculatedScreenDimensions;\n\n    this.positionAndScaleElements(viewportWidth, viewportHeight, viewportIsLandscape);\n  }\n\n  private positionAndScaleElements (\n    viewportWidth: number,\n    viewportHeight: number,\n    viewportIsLandscape: boolean\n  ): void {\n    const screenLeft = viewportWidth / 2 - this.calculatedScreenDimensions / 2;\n    const screenTop = viewportHeight / 2 - (viewportIsLandscape ? this.calculatedScreenDimensions / 2 : this.calculatedScreenDimensions);\n    const leftConLeft = viewportIsLandscape ? screenLeft - this.calculatedScreenDimensions / 2 : screenLeft;\n    const leftConTop = viewportIsLandscape ? screenTop : screenTop + this.calculatedScreenDimensions;\n    const rightConLeft = viewportIsLandscape ? screenLeft + this.calculatedScreenDimensions : screenLeft + this.calculatedScreenDimensions / 2;\n    const rightConTop = viewportIsLandscape ? screenTop : screenTop + this.calculatedScreenDimensions;\n    const conWidth = this.calculatedScreenDimensions / 2;\n    const conHeight = this.calculatedScreenDimensions;\n    \n    const dPadDimensions = conWidth / 1.5;\n    const dPadIndividualButtonDimensions = dPadDimensions / 3;\n    const dPadLeft = conWidth / 2 - dPadDimensions / 2;\n    const dPadTop = conHeight / 2 - dPadDimensions / 2;\n\n    const actionBtnsWidth = conWidth / 1.5;\n    const actionBtnsHeight = actionBtnsWidth / 1.2;\n    const actionBtnDimensions = conWidth / 3.5;\n    const actionBtnCenterX = conWidth / 2;\n    const actionBtnCenterY = conHeight / 2;\n\n    const adminBtnDimensions = conWidth / 6;\n    \n    this.screen.element.style.left = `${screenLeft}px`;\n    this.screen.element.style.top = `${screenTop}px`;\n\n    this.leftConElement.style.left = `${leftConLeft}px`;\n    this.leftConElement.style.top = `${leftConTop}px`;\n    this.leftConElement.style.width = `${conWidth}px`;\n    this.leftConElement.style.height = `${conHeight}px`;\n\n    this.rightConElement.style.left = `${rightConLeft}px`;\n    this.rightConElement.style.top = `${rightConTop}px`;\n    this.rightConElement.style.width = `${conWidth}px`;\n    this.rightConElement.style.height = `${conHeight}px`;\n    \n    this.buttons.dPadElement.style.left = `${dPadLeft}px`;\n    this.buttons.dPadElement.style.top = `${dPadTop}px`;\n    this.buttons.dPadElement.style.width = `${dPadDimensions}px`;\n    this.buttons.dPadElement.style.height = `${dPadDimensions}px`;\n\n    (() => {\n      let x = 0;\n      let y = 0;\n\n      this.buttons.dPadButtons.forEach((item) => {\n        item.element!.style.left = `${x * dPadIndividualButtonDimensions}px`;\n        item.element!.style.top = `${y * dPadIndividualButtonDimensions}px`;\n        item.element!.style.width = `${dPadIndividualButtonDimensions}px`;\n        item.element!.style.height = `${dPadIndividualButtonDimensions}px`;\n\n        y = x === 2 ? y + 1 : y;\n        x = x !== 2 ? x + 1 : 0;\n      });\n    })();\n    \n    this.buttons.actionBtnsElement.style.left = `${actionBtnCenterX - actionBtnsWidth / 2}px`;\n    this.buttons.actionBtnsElement.style.top = `${actionBtnCenterY - actionBtnsHeight / 2}px`;\n    this.buttons.actionBtnsElement.style.width = `${actionBtnsWidth}px`;\n    this.buttons.actionBtnsElement.style.height = `${actionBtnsHeight}px`;\n\n    this.buttons.actionBtnIElement.style.left = `0`;\n    this.buttons.actionBtnIElement.style.top = `${actionBtnsHeight - actionBtnDimensions}px`;\n    this.buttons.actionBtnIElement.style.width = `${actionBtnDimensions}px`;\n    this.buttons.actionBtnIElement.style.height = `${actionBtnDimensions}px`;\n    \n    this.buttons.actionBtnIIElement.style.left = `${actionBtnsWidth - actionBtnDimensions}px`;\n    this.buttons.actionBtnIIElement.style.top = `0`;\n    this.buttons.actionBtnIIElement.style.width = `${actionBtnDimensions}px`;\n    this.buttons.actionBtnIIElement.style.height = `${actionBtnDimensions}px`;\n\n    this.buttons.powerBtnElement.style.left = `${adminBtnDimensions}px`;\n    this.buttons.powerBtnElement.style.top = `${adminBtnDimensions}px`;\n    this.buttons.powerBtnElement.style.width = `${adminBtnDimensions}px`;\n    this.buttons.powerBtnElement.style.height = `${adminBtnDimensions}px`;\n    \n    this.buttons.settingsBtnElement.style.left = `${conWidth - adminBtnDimensions * 2}px`;\n    this.buttons.settingsBtnElement.style.top = `${adminBtnDimensions}px`;\n    this.buttons.settingsBtnElement.style.width = `${adminBtnDimensions}px`;\n    this.buttons.settingsBtnElement.style.height = `${adminBtnDimensions}px`;\n  }\n\n  private powerOn (): void {\n    this.isPoweredOn = true;\n    this.buttons.powerOn();\n    // this.screen.powerOn();\n  }\n}\n"],"names":["$165319c460ede499$export$ebe90cb607ad99e","allowFullscreen","allowPreventContextMenu","allowTouchPreventDefault","allowKeyboardPreventDefault","allowWarnOnReload","$e8ce64631166e29a$export$aaf181f39380b0fc","point","rect","x","right","y","bottom","$b87507472c4fc21b$export$baf26146a414f24a","this","DPadButtons","$97b231d28a326e92$var$DPadButtons","$97b231d28a326e92$export$2e2bcd8739ae039","params","dPadButtons","name","LtUp","element","Up","RtUp","Lt","Center","Rt","LtDn","Dn","RtDn","isLtUpPressed","isUpPressed","isRtUpPressed","isLtPressed","isRtPressed","isLtDnPressed","isDnPressed","isRtDnPressed","config","dPadElement","document","querySelector","forEach","item","actionBtnsElement","actionBtnIElement","actionBtnIIElement","powerBtnElement","settingsBtnElement","setActiveDPadElements","item1","find","classList","add","powerOn","remove","addEventListener","event","target","id","dev","preventDefault","firstTouch","touches","pageX","pageY","getBoundingClientRect","$05c577845b579040$export$2e2bcd8739ae039","dimensions","pixelScale","antiAliasingScaleThreshold","context","getContext","imageSmoothingEnabled","imageSmoothingQuality","setPixelScale","calculatedScreenDimensions","scale","Math","floor","$e6b70c27f001525d$var$config","isPoweredOn","buttons","screen","containerElement","leftConElement","rightConElement","handleInitialInteraction","documentElement","requestFullscreen","e","window","onbeforeunload","calculatePositionAndScale","viewportWidth","innerWidth","viewportHeight","innerHeight","viewportIsLandscape","width","height","positionAndScaleElements","screenLeft","screenTop","leftConLeft","leftConTop","rightConLeft","rightConTop","conWidth","conHeight","dPadDimensions","dPadIndividualButtonDimensions","dPadLeft","dPadTop","actionBtnsWidth","actionBtnsHeight","actionBtnDimensions","actionBtnCenterX","actionBtnCenterY","adminBtnDimensions","style","left","top"],"version":3,"file":"index.c5fcda92.js.map"}