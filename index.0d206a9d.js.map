{"mappings":"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","sources":["examples/console.ts","src/canvas.ts","src/Console.ts"],"sourcesContent":["import Canvas from \"~src/Canvas\";\nimport Console from \"../src/Console\";\n\nconst canvas = new Canvas();\nnew Console({\n  canvas\n});\n","export default class Canvas {\n  public dimensions: number = 256;\n  public element: HTMLCanvasElement;\n  public context: CanvasRenderingContext2D;\n  public pixelScale: number = 1;\n  public antiAliasingScaleThreshold = 4;\n\n  constructor () {\n    this.element = document.querySelector('#screen')!;\n    this.context = this.element.getContext('2d')!;\n  }\n\n  public setPixelScale (calculatedScreenDimensions: number): void {\n    const scale = calculatedScreenDimensions / this.dimensions;\n    this.pixelScale = scale > this.antiAliasingScaleThreshold ? Math.floor(scale) : scale;\n  }\n}\n","import Canvas from \"./Canvas\";\n\nexport interface ConsoleParams {\n  canvas: Canvas;\n}\n\nexport default class Console {\n  private canvas: Canvas;\n\n  private leftConElement: HTMLDivElement;\n  private rightConElement: HTMLDivElement;\n  private dpadElement: HTMLDivElement;\n  private actionBtnIElement: HTMLDivElement;\n  private actionBtnIIElement: HTMLDivElement;\n\n  private calculatedScreenDimensions: number = 256;\n\n  constructor (params: ConsoleParams) {\n    this.canvas = params.canvas;\n    this.leftConElement = document.querySelector('#leftCon')!;\n    this.rightConElement = document.querySelector('#rightCon')!;\n    this.dpadElement = document.querySelector('#dpad')!;\n    this.actionBtnIElement = document.querySelector('#I')!;\n    this.actionBtnIIElement = document.querySelector('#II')!;\n\n    this.calculatePositionAndScale();\n\n    window.addEventListener('resize', () => {\n      this.calculatePositionAndScale();\n    }, false);\n    window.addEventListener('deviceorientation', () => {\n      this.calculatePositionAndScale();\n    }, false);\n  }\n\n  private calculatePositionAndScale (): void {\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const viewportIsLandscape = viewportWidth > viewportHeight;\n    \n    this.calculatedScreenDimensions = Math.floor(\n      viewportIsLandscape ?\n        viewportWidth / viewportHeight < 2 ? viewportWidth / 2 : viewportHeight :\n        viewportHeight / viewportWidth < 2 ? viewportHeight / 2 : viewportWidth\n    );\n\n    this.canvas.setPixelScale(this.calculatedScreenDimensions);\n\n    if (this.calculatedScreenDimensions / this.canvas.dimensions > this.canvas.pixelScale) {\n      this.calculatedScreenDimensions = this.canvas.dimensions * this.canvas.pixelScale;\n    }\n\n    this.canvas.element.width = this.calculatedScreenDimensions;\n    this.canvas.element.height = this.calculatedScreenDimensions;\n\n    this.positionAndScaleElements(viewportWidth, viewportHeight, viewportIsLandscape);\n  }\n\n  private positionAndScaleElements (\n    viewportWidth: number,\n    viewportHeight: number,\n    viewportIsLandscape: boolean\n  ): void {\n    const screenLeft = viewportWidth / 2 - this.calculatedScreenDimensions / 2;\n    const screenTop = viewportHeight / 2 - (viewportIsLandscape ? this.calculatedScreenDimensions / 2 : this.calculatedScreenDimensions);\n    const leftConLeft = viewportIsLandscape ? screenLeft - this.calculatedScreenDimensions / 2 : screenLeft;\n    const leftConTop = viewportIsLandscape ? screenTop : screenTop + this.calculatedScreenDimensions;\n    const rightConLeft = viewportIsLandscape ? screenLeft + this.calculatedScreenDimensions : screenLeft + this.calculatedScreenDimensions / 2;\n    const rightConTop = viewportIsLandscape ? screenTop : screenTop + this.calculatedScreenDimensions;\n    const conWidth = this.calculatedScreenDimensions / 2;\n    const conHeight = this.calculatedScreenDimensions;\n    \n    const dpadDimensions = conWidth / 1.6;\n    const dpadLeft = (leftConLeft + conWidth / 2) - dpadDimensions / 2;\n    const dpadTop = (leftConTop + conHeight / 2) - dpadDimensions / 2;\n\n    const actionBtnDimensions = conWidth / 3.6;\n    const actionBtnSpacing = conWidth / 9;\n    const actionBtnCenterX = rightConLeft + conWidth / 2;\n    const actionBtnCenterY = rightConTop + conHeight / 2;\n    \n    this.canvas.element.style.left = `${screenLeft}px`;\n    this.canvas.element.style.top = `${screenTop}px`;\n\n    this.leftConElement.style.left = `${leftConLeft}px`;\n    this.leftConElement.style.top = `${leftConTop}px`;\n    this.leftConElement.style.width = `${conWidth}px`;\n    this.leftConElement.style.height = `${conHeight}px`;\n\n    this.rightConElement.style.left = `${rightConLeft}px`;\n    this.rightConElement.style.top = `${rightConTop}px`;\n    this.rightConElement.style.width = `${conWidth}px`;\n    this.rightConElement.style.height = `${conHeight}px`;\n\n    this.dpadElement.style.left = `${dpadLeft}px`;\n    this.dpadElement.style.top = `${dpadTop}px`;\n    this.dpadElement.style.width = `${dpadDimensions}px`;\n    this.dpadElement.style.height = `${dpadDimensions}px`;\n\n    this.actionBtnIElement.style.left = `${actionBtnCenterX - actionBtnSpacing / 2 - actionBtnDimensions}px`;\n    this.actionBtnIElement.style.top = `${actionBtnCenterY}px`;\n    this.actionBtnIElement.style.width = `${actionBtnDimensions}px`;\n    this.actionBtnIElement.style.height = `${actionBtnDimensions}px`;\n    \n    this.actionBtnIIElement.style.left = `${actionBtnCenterX + actionBtnSpacing / 2}px`;\n    this.actionBtnIIElement.style.top = `${actionBtnCenterY - actionBtnDimensions}px`;\n    this.actionBtnIIElement.style.width = `${actionBtnDimensions}px`;\n    this.actionBtnIIElement.style.height = `${actionBtnDimensions}px`;\n  }\n}\n"],"names":["$e6b70c27f001525d$var$canvas","this","dimensions","pixelScale","antiAliasingScaleThreshold","element","document","querySelector","context","getContext","setPixelScale","calculatedScreenDimensions","scale","Math","floor","params","canvas","leftConElement","rightConElement","dpadElement","actionBtnIElement","actionBtnIIElement","calculatePositionAndScale","window","addEventListener","viewportWidth","innerWidth","viewportHeight","innerHeight","viewportIsLandscape","width","height","positionAndScaleElements","screenLeft","screenTop","leftConLeft","leftConTop","rightConLeft","rightConTop","conWidth","conHeight","dpadDimensions","dpadLeft","dpadTop","actionBtnDimensions","actionBtnSpacing","actionBtnCenterX","actionBtnCenterY","style","left","top"],"version":3,"file":"index.0d206a9d.js.map"}