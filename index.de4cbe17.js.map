{"mappings":"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","sources":["src/collision.ts","src/geometry.ts","src/Buttons.ts","examples/console.ts","src/Screen.ts","src/Console.ts"],"sourcesContent":["import { Point, Rect } from \"./geometry\";\n\nexport function hitCheckPointRect (point: Point, rect: Rect): boolean {\n  return point.x > rect.x && point.x < rect.right && point.y > rect.y && point.y < rect.bottom;\n}\n","export class Point {\n  public x: number;\n  public y: number;\n\n  constructor (x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nexport class Rect {\n  public height: number;\n  public width: number;\n  public x: number;\n  public y: number;\n\n  constructor (x: number, y: number, width: number, height: number) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  public get bottom (): number {\n    return this.y + this.height;\n  }\n\n  public get left (): number {\n    return this.x;\n  }\n\n  public get right (): number {\n    return this.x + this.width;\n  }\n\n  public get top (): number {\n    return this.y;\n  }\n}\n","import { hitCheckPointRect } from \"./collision\";\nimport { Point } from \"./geometry\";\n\nenum DPadButtons {\n  Up = 'Up',\n  Lt = 'Lt',\n  Dn = 'Dn',\n  Rt = 'Rt',\n  Center = 'Center',\n  LtUp = 'LtUp',\n  LtDn = 'LtDn',\n  RtUp = 'RtUp',\n  RtDn = 'RtDn'\n}\n\ninterface DPadButtonItem {\n  name: DPadButtons;\n  element: HTMLDivElement | null;\n}\n\nexport default class Buttons {\n  public dPadElement: HTMLDivElement;\n  public dPadButtons: DPadButtonItem[] = [\n    {\n      name: DPadButtons.LtUp,\n      element: null\n    },\n    {\n      name: DPadButtons.Up,\n      element: null\n    },\n    {\n      name: DPadButtons.RtUp,\n      element: null\n    },\n    {\n      name: DPadButtons.Lt,\n      element: null\n    },\n    {\n      name: DPadButtons.Center,\n      element: null\n    },\n    {\n      name: DPadButtons.Rt,\n      element: null\n    },\n    {\n      name: DPadButtons.LtDn,\n      element: null\n    },\n    {\n      name: DPadButtons.Dn,\n      element: null\n    },\n    {\n      name: DPadButtons.RtDn,\n      element: null\n    }\n  ];\n  \n  public actionBtnsElement: HTMLDivElement;\n  public actionBtnIElement: HTMLDivElement;\n  public actionBtnIIElement: HTMLDivElement;\n\n  public powerBtnElement: HTMLDivElement;\n  public settingsBtnElement: HTMLDivElement;\n\n  public readonly isLtUpPressed: boolean = false;\n  public readonly isUpPressed: boolean = false;\n  public readonly isRtUpPressed: boolean = false;\n  public readonly isLtPressed: boolean = false;\n  public readonly isRtPressed: boolean = false;\n  public readonly isLtDnPressed: boolean = false;\n  public readonly isDnPressed: boolean = false;\n  public readonly isRtDnPressed: boolean = false;\n\n  constructor () {\n    this.dPadElement = document.querySelector('#dPad')!;\n\n    this.dPadButtons.forEach((item) => {\n      item.element = document.querySelector(`#${item.name}`);\n    });\n\n    this.actionBtnsElement = document.querySelector('#actionBtns')!;\n    this.actionBtnIElement = document.querySelector('#actionBtnI')!;\n    this.actionBtnIIElement = document.querySelector('#actionBtnII')!;\n\n    this.powerBtnElement = document.querySelector('#powerBtn')!;\n    this.settingsBtnElement = document.querySelector('#settingsBtn')!;\n\n    this.powerBtnElement.addEventListener('touchstart', () => {\n      this.powerOn();\n    }, false);\n    this.powerBtnElement.addEventListener('mousedown', () => {\n      this.powerOn();\n    }, false);\n  }\n\n  private powerOn (): void {\n    this.dPadElement.addEventListener('touchstart', (event) => {\n      this.setActiveDPadElements(this.dPadButtons.find((item) => item.name === (event.target as HTMLElement).id)!);\n    }, false);\n    this.dPadElement.addEventListener('touchmove', (event: TouchEvent) => {\n      event.preventDefault();\n\n      this.dPadButtons.forEach((item) => {\n        item.element?.classList.remove('active');\n      });\n\n      const firstTouch = event.touches[0];\n      \n      this.dPadButtons.forEach((item) => {\n        if (hitCheckPointRect(new Point(firstTouch.pageX, firstTouch.pageY), item.element!.getBoundingClientRect())) {\n          this.setActiveDPadElements(item);\n        }\n      });\n    }, false);\n    this.dPadElement.addEventListener('touchend', (event) => {\n      this.dPadButtons.forEach((item) => {\n        item.element?.classList.remove('active');\n      });\n    }, false);\n\n    this.actionBtnsElement.addEventListener('touchstart', (event) => {\n      (event.target as HTMLElement).classList.add('active');\n    }, false);\n    this.actionBtnsElement.addEventListener('touchmove', (event: TouchEvent) => {\n      event.preventDefault();\n\n      const firstTouch = event.touches[0];\n\n      this.actionBtnIElement.classList.remove('active');\n      this.actionBtnIIElement.classList.remove('active');\n      \n      if (hitCheckPointRect(new Point(firstTouch.pageX, firstTouch.pageY), this.actionBtnIElement.getBoundingClientRect())) {\n        this.actionBtnIElement.classList.add('active');\n      } else if (hitCheckPointRect(new Point(firstTouch.pageX, firstTouch.pageY), this.actionBtnIIElement.getBoundingClientRect())) {\n        this.actionBtnIIElement.classList.add('active');\n      }\n    }, false);\n    this.actionBtnsElement.addEventListener('touchend', (event) => {\n      (event.target as HTMLElement).classList.remove('active');\n    }, false);\n  }\n\n  private setActiveDPadElements (item: DPadButtonItem): void {\n    if (item.name === DPadButtons.LtUp) {\n      this.dPadButtons.find((item) => item.name === DPadButtons.Lt)?.element?.classList.add('active');\n      this.dPadButtons.find((item) => item.name === DPadButtons.Up)?.element?.classList.add('active');\n    } else if (item.name === DPadButtons.RtUp) {\n      this.dPadButtons.find((item) => item.name === DPadButtons.Rt)?.element?.classList.add('active');\n      this.dPadButtons.find((item) => item.name === DPadButtons.Up)?.element?.classList.add('active');\n    } else if (item.name === DPadButtons.LtDn) {\n      this.dPadButtons.find((item) => item.name === DPadButtons.Lt)?.element?.classList.add('active');\n      this.dPadButtons.find((item) => item.name === DPadButtons.Dn)?.element?.classList.add('active');\n    } else if (item.name === DPadButtons.RtDn) {\n      this.dPadButtons.find((item) => item.name === DPadButtons.Rt)?.element?.classList.add('active');\n      this.dPadButtons.find((item) => item.name === DPadButtons.Dn)?.element?.classList.add('active');\n    } else {\n      item.element?.classList.add('active');\n    }\n  }\n}\n","import Buttons from \"~src/Buttons\";\nimport Console from \"../src/Console\";\nimport Screen from \"../src/Screen\";\n\nconst buttons = new Buttons();\nconst screen = new Screen();\n\nnew Console({\n  buttons,\n  screen\n});\n","export default class Screen {\n  public dimensions: number = 256;\n  public element: HTMLCanvasElement;\n  public context: CanvasRenderingContext2D;\n  public pixelScale: number = 1;\n  public antiAliasingScaleThreshold = 4;\n\n  constructor () {\n    this.element = document.querySelector('#screen')!;\n    this.context = this.element.getContext('2d')!;\n    this.context.imageSmoothingEnabled = false;\n    this.context.imageSmoothingQuality = 'low';\n  }\n\n  public setPixelScale (calculatedScreenDimensions: number): void {\n    const scale = calculatedScreenDimensions / this.dimensions;\n    this.pixelScale = scale > this.antiAliasingScaleThreshold ? Math.floor(scale) : scale;\n  }\n}\n","import Buttons from \"./Buttons\";\nimport Screen from \"./Screen\";\n\nexport interface ConsoleParams {\n  screen: Screen;\n  buttons: Buttons;\n}\n\nexport default class Console {\n  private screen: Screen;\n  private buttons: Buttons;\n\n  private leftConElement: HTMLDivElement;\n  private rightConElement: HTMLDivElement;\n\n  private calculatedScreenDimensions: number = 256;\n\n  constructor (params: ConsoleParams) {\n    this.screen = params.screen;\n    this.buttons = params.buttons;\n    this.leftConElement = document.querySelector('#leftCon')!;\n    this.rightConElement = document.querySelector('#rightCon')!;\n\n    document.addEventListener('contextmenu', e => e.preventDefault());\n\n    this.calculatePositionAndScale();\n\n    window.addEventListener('resize', () => {\n      this.calculatePositionAndScale();\n    }, false);\n    window.addEventListener('deviceorientation', () => {\n      this.calculatePositionAndScale();\n    }, false);\n  }\n\n  private calculatePositionAndScale (): void {\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const viewportIsLandscape = viewportWidth > viewportHeight;\n    \n    this.calculatedScreenDimensions = Math.floor(\n      viewportIsLandscape ?\n        viewportWidth / viewportHeight < 2 ? viewportWidth / 2 : viewportHeight :\n        viewportHeight / viewportWidth < 2 ? viewportHeight / 2 : viewportWidth\n    );\n\n    this.screen.setPixelScale(this.calculatedScreenDimensions);\n\n    if (this.calculatedScreenDimensions / this.screen.dimensions > this.screen.pixelScale) { // ie: anti aliasing threshold exceeded\n      this.calculatedScreenDimensions = this.screen.dimensions * this.screen.pixelScale;\n    }\n\n    this.screen.element.width = this.calculatedScreenDimensions;\n    this.screen.element.height = this.calculatedScreenDimensions;\n\n    this.positionAndScaleElements(viewportWidth, viewportHeight, viewportIsLandscape);\n  }\n\n  private positionAndScaleElements (\n    viewportWidth: number,\n    viewportHeight: number,\n    viewportIsLandscape: boolean\n  ): void {\n    const screenLeft = viewportWidth / 2 - this.calculatedScreenDimensions / 2;\n    const screenTop = viewportHeight / 2 - (viewportIsLandscape ? this.calculatedScreenDimensions / 2 : this.calculatedScreenDimensions);\n    const leftConLeft = viewportIsLandscape ? screenLeft - this.calculatedScreenDimensions / 2 : screenLeft;\n    const leftConTop = viewportIsLandscape ? screenTop : screenTop + this.calculatedScreenDimensions;\n    const rightConLeft = viewportIsLandscape ? screenLeft + this.calculatedScreenDimensions : screenLeft + this.calculatedScreenDimensions / 2;\n    const rightConTop = viewportIsLandscape ? screenTop : screenTop + this.calculatedScreenDimensions;\n    const conWidth = this.calculatedScreenDimensions / 2;\n    const conHeight = this.calculatedScreenDimensions;\n    \n    const dPadDimensions = conWidth / 1.5;\n    const dPadIndividualButtonDimensions = dPadDimensions / 3;\n    const dPadLeft = (leftConLeft + conWidth / 2) - dPadDimensions / 2;\n    const dPadTop = (leftConTop + conHeight / 2) - dPadDimensions / 2;\n\n    (() => {\n      let x = 0;\n      let y = 0;\n\n      this.buttons.dPadButtons.forEach((item) => {\n        item.element!.style.left = `${x * dPadIndividualButtonDimensions}px`;\n        item.element!.style.top = `${y * dPadIndividualButtonDimensions}px`;\n        item.element!.style.width = `${dPadIndividualButtonDimensions}px`;\n        item.element!.style.height = `${dPadIndividualButtonDimensions}px`;\n\n        y = x === 2 ? y + 1 : y;\n        x = x !== 2 ? x + 1 : 0;\n      });\n    })();\n\n    const actionBtnsWidth = conWidth / 1.5;\n    const actionBtnsHeight = actionBtnsWidth / 1.2;\n    const actionBtnDimensions = conWidth / 3.5;\n    const actionBtnCenterX = rightConLeft + conWidth / 2;\n    const actionBtnCenterY = rightConTop + conHeight / 2;\n    \n    this.screen.element.style.left = `${screenLeft}px`;\n    this.screen.element.style.top = `${screenTop}px`;\n    \n    this.buttons.dPadElement.style.left = `${dPadLeft}px`;\n    this.buttons.dPadElement.style.top = `${dPadTop}px`;\n    this.buttons.dPadElement.style.width = `${dPadDimensions}px`;\n    this.buttons.dPadElement.style.height = `${dPadDimensions}px`;\n\n    this.buttons.dPadElement.style.left = `${dPadLeft}px`;\n    this.buttons.dPadElement.style.top = `${dPadTop}px`;\n    this.buttons.dPadElement.style.width = `${dPadDimensions}px`;\n    this.buttons.dPadElement.style.height = `${dPadDimensions}px`;\n    \n    this.buttons.actionBtnsElement.style.left = `${actionBtnCenterX - actionBtnsWidth / 2}px`;\n    this.buttons.actionBtnsElement.style.top = `${actionBtnCenterY - actionBtnsHeight / 2}px`;\n    this.buttons.actionBtnsElement.style.width = `${actionBtnsWidth}px`;\n    this.buttons.actionBtnsElement.style.height = `${actionBtnsHeight}px`;\n\n    this.buttons.actionBtnIElement.style.left = `0`;\n    this.buttons.actionBtnIElement.style.top = `${actionBtnsHeight - actionBtnDimensions}px`;\n    this.buttons.actionBtnIElement.style.width = `${actionBtnDimensions}px`;\n    this.buttons.actionBtnIElement.style.height = `${actionBtnDimensions}px`;\n    \n    this.buttons.actionBtnIIElement.style.left = `${actionBtnsWidth - actionBtnDimensions}px`;\n    this.buttons.actionBtnIIElement.style.top = `0`;\n    this.buttons.actionBtnIIElement.style.width = `${actionBtnDimensions}px`;\n    this.buttons.actionBtnIIElement.style.height = `${actionBtnDimensions}px`;\n\n    this.leftConElement.style.left = `${leftConLeft}px`;\n    this.leftConElement.style.top = `${leftConTop}px`;\n    this.leftConElement.style.width = `${conWidth}px`;\n    this.leftConElement.style.height = `${conHeight}px`;\n\n    this.rightConElement.style.left = `${rightConLeft}px`;\n    this.rightConElement.style.top = `${rightConTop}px`;\n    this.rightConElement.style.width = `${conWidth}px`;\n    this.rightConElement.style.height = `${conHeight}px`;\n  }\n}\n"],"names":["$e8ce64631166e29a$export$aaf181f39380b0fc","point","rect","x","right","y","bottom","$b87507472c4fc21b$export$baf26146a414f24a","this","DPadButtons","$97b231d28a326e92$var$DPadButtons","$e6b70c27f001525d$var$buttons","dPadButtons","name","LtUp","element","Up","RtUp","Lt","Center","Rt","LtDn","Dn","RtDn","isLtUpPressed","isUpPressed","isRtUpPressed","isLtPressed","isRtPressed","isLtDnPressed","isDnPressed","isRtDnPressed","dPadElement","document","querySelector","forEach","item","actionBtnsElement","actionBtnIElement","actionBtnIIElement","powerBtnElement","settingsBtnElement","addEventListener","powerOn","event","setActiveDPadElements","find","target","id","preventDefault","classList","remove","firstTouch","touches","pageX","pageY","getBoundingClientRect","add","item1","$e6b70c27f001525d$var$screen","dimensions","pixelScale","antiAliasingScaleThreshold","context","getContext","imageSmoothingEnabled","imageSmoothingQuality","setPixelScale","calculatedScreenDimensions","scale","Math","floor","params","screen","buttons","leftConElement","rightConElement","e","calculatePositionAndScale","window","viewportWidth","innerWidth","viewportHeight","innerHeight","viewportIsLandscape","width","height","positionAndScaleElements","screenLeft","screenTop","leftConLeft","leftConTop","rightConLeft","rightConTop","conWidth","conHeight","dPadDimensions","dPadIndividualButtonDimensions","dPadLeft","dPadTop","style","left","top","actionBtnsWidth","actionBtnsHeight","actionBtnDimensions","actionBtnCenterX","actionBtnCenterY"],"version":3,"file":"index.de4cbe17.js.map"}