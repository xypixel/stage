{"mappings":"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","sources":["src/collision.ts","src/geometry.ts","src/Buttons.ts","examples/console.ts","src/Screen.ts","src/Console.ts"],"sourcesContent":["import { Point, Rect } from \"./geometry\";\n\nexport function hitCheckPointRect (point: Point, rect: Rect): boolean {\n  return point.x > rect.x && point.x < rect.right && point.y > rect.y && point.y < rect.bottom;\n}\n","export class Point {\n  public x: number;\n  public y: number;\n\n  constructor (x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nexport class Rect {\n  public height: number;\n  public width: number;\n  public x: number;\n  public y: number;\n\n  constructor (x: number, y: number, width: number, height: number) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  public get bottom (): number {\n    return this.y + this.height;\n  }\n\n  public get left (): number {\n    return this.x;\n  }\n\n  public get right (): number {\n    return this.x + this.width;\n  }\n\n  public get top (): number {\n    return this.y;\n  }\n}\n","import { hitCheckPointRect } from \"./collision\";\nimport { Point } from \"./geometry\";\n\nenum DPadButtons {\n  Up = 'Up',\n  Lt = 'Lt',\n  Dn = 'Dn',\n  Rt = 'Rt',\n  Center = 'Center',\n  LtUp = 'LtUp',\n  LtDn = 'LtDn',\n  RtUp = 'RtUp',\n  RtDn = 'RtDn'\n}\n\ninterface DPadButtonItem {\n  name: DPadButtons;\n  element: HTMLDivElement | null;\n}\n\nexport default class Buttons {\n  public dPadElement: HTMLDivElement;\n  public dPadButtons: DPadButtonItem[] = [\n    {\n      name: DPadButtons.LtUp,\n      element: null\n    },\n    {\n      name: DPadButtons.Up,\n      element: null\n    },\n    {\n      name: DPadButtons.RtUp,\n      element: null\n    },\n    {\n      name: DPadButtons.Lt,\n      element: null\n    },\n    {\n      name: DPadButtons.Center,\n      element: null\n    },\n    {\n      name: DPadButtons.Rt,\n      element: null\n    },\n    {\n      name: DPadButtons.LtDn,\n      element: null\n    },\n    {\n      name: DPadButtons.Dn,\n      element: null\n    },\n    {\n      name: DPadButtons.RtDn,\n      element: null\n    }\n  ];\n  public actionBtnsElement: HTMLDivElement;\n  public actionBtnIElement: HTMLDivElement;\n  public actionBtnIIElement: HTMLDivElement;\n\n  public readonly isLtUpPressed: boolean = false;\n  public readonly isUpPressed: boolean = false;\n  public readonly isRtUpPressed: boolean = false;\n  public readonly isLtPressed: boolean = false;\n  public readonly isRtPressed: boolean = false;\n  public readonly isLtDnPressed: boolean = false;\n  public readonly isDnPressed: boolean = false;\n  public readonly isRtDnPressed: boolean = false;\n\n  constructor () {\n    this.dPadElement = document.querySelector('#dPad')!;\n\n    this.dPadButtons.forEach((item) => {\n      item.element = document.querySelector(`#${item.name}`);\n    });\n\n    this.actionBtnsElement = document.querySelector('#actionBtns')!;\n    this.actionBtnIElement = document.querySelector('#actionBtnI')!;\n    this.actionBtnIIElement = document.querySelector('#actionBtnII')!;\n\n    this.dPadElement.addEventListener('touchstart', (event) => {\n      this.setActiveDPadElements(this.dPadButtons.find((item) => item.name === (event.target as HTMLElement).id)!);\n    }, false);\n    this.dPadElement.addEventListener('touchmove', (event: TouchEvent) => {\n      event.preventDefault();\n\n      this.dPadButtons.forEach((item) => {\n        item.element?.classList.remove('active');\n      });\n\n      const firstTouch = event.touches[0];\n      \n      this.dPadButtons.forEach((item) => {\n        if (hitCheckPointRect(new Point(firstTouch.pageX, firstTouch.pageY), item.element!.getBoundingClientRect())) {\n          this.setActiveDPadElements(item);\n        }\n      });\n    }, false);\n    this.dPadElement.addEventListener('touchend', (event) => {\n      this.dPadButtons.forEach((item) => {\n        item.element?.classList.remove('active');\n      });\n    }, false);\n\n    this.actionBtnsElement.addEventListener('touchstart', (event) => {\n      (event.target as HTMLElement).classList.add('active');\n    }, false);\n    this.actionBtnsElement.addEventListener('touchmove', (event: TouchEvent) => {\n      event.preventDefault();\n\n      const firstTouch = event.touches[0];\n\n      this.actionBtnIElement.classList.remove('active');\n      this.actionBtnIIElement.classList.remove('active');\n      \n      if (hitCheckPointRect(new Point(firstTouch.pageX, firstTouch.pageY), this.actionBtnIElement.getBoundingClientRect())) {\n        this.actionBtnIElement.classList.add('active');\n      } else if (hitCheckPointRect(new Point(firstTouch.pageX, firstTouch.pageY), this.actionBtnIIElement.getBoundingClientRect())) {\n        this.actionBtnIIElement.classList.add('active');\n      }\n    }, false);\n    this.actionBtnsElement.addEventListener('touchend', (event) => {\n      (event.target as HTMLElement).classList.remove('active');\n    }, false);\n  }\n\n  private setActiveDPadElements (item: DPadButtonItem): void {\n    if (item.name === DPadButtons.LtUp) {\n      this.dPadButtons.find((item) => item.name === DPadButtons.Lt)?.element?.classList.add('active');\n      this.dPadButtons.find((item) => item.name === DPadButtons.Up)?.element?.classList.add('active');\n    } else if (item.name === DPadButtons.RtUp) {\n      this.dPadButtons.find((item) => item.name === DPadButtons.Rt)?.element?.classList.add('active');\n      this.dPadButtons.find((item) => item.name === DPadButtons.Up)?.element?.classList.add('active');\n    } else if (item.name === DPadButtons.LtDn) {\n      this.dPadButtons.find((item) => item.name === DPadButtons.Lt)?.element?.classList.add('active');\n      this.dPadButtons.find((item) => item.name === DPadButtons.Dn)?.element?.classList.add('active');\n    } else if (item.name === DPadButtons.RtDn) {\n      this.dPadButtons.find((item) => item.name === DPadButtons.Rt)?.element?.classList.add('active');\n      this.dPadButtons.find((item) => item.name === DPadButtons.Dn)?.element?.classList.add('active');\n    } else {\n      item.element?.classList.add('active');\n    }\n  }\n}\n","import Buttons from \"~src/Buttons\";\nimport Console from \"../src/Console\";\nimport Screen from \"../src/Screen\";\n\nconst buttons = new Buttons();\nconst screen = new Screen();\n\nnew Console({\n  buttons,\n  screen\n});\n","export default class Screen {\n  public dimensions: number = 256;\n  public element: HTMLCanvasElement;\n  public context: CanvasRenderingContext2D;\n  public pixelScale: number = 1;\n  public antiAliasingScaleThreshold = 4;\n\n  constructor () {\n    this.element = document.querySelector('#screen')!;\n    this.context = this.element.getContext('2d')!;\n    this.context.imageSmoothingEnabled = false;\n    this.context.imageSmoothingQuality = 'low';\n  }\n\n  public setPixelScale (calculatedScreenDimensions: number): void {\n    const scale = calculatedScreenDimensions / this.dimensions;\n    this.pixelScale = scale > this.antiAliasingScaleThreshold ? Math.floor(scale) : scale;\n  }\n}\n","import Buttons from \"./Buttons\";\nimport Screen from \"./Screen\";\n\nexport interface ConsoleParams {\n  screen: Screen;\n  buttons: Buttons;\n}\n\nexport default class Console {\n  private screen: Screen;\n  private buttons: Buttons;\n\n  private leftConElement: HTMLDivElement;\n  private rightConElement: HTMLDivElement;\n\n  private calculatedScreenDimensions: number = 256;\n\n  constructor (params: ConsoleParams) {\n    this.screen = params.screen;\n    this.buttons = params.buttons;\n    this.leftConElement = document.querySelector('#leftCon')!;\n    this.rightConElement = document.querySelector('#rightCon')!;\n\n    document.addEventListener('contextmenu', e => e.preventDefault());\n\n    this.calculatePositionAndScale();\n\n    window.addEventListener('resize', () => {\n      this.calculatePositionAndScale();\n    }, false);\n    window.addEventListener('deviceorientation', () => {\n      this.calculatePositionAndScale();\n    }, false);\n  }\n\n  private calculatePositionAndScale (): void {\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const viewportIsLandscape = viewportWidth > viewportHeight;\n    \n    this.calculatedScreenDimensions = Math.floor(\n      viewportIsLandscape ?\n        viewportWidth / viewportHeight < 2 ? viewportWidth / 2 : viewportHeight :\n        viewportHeight / viewportWidth < 2 ? viewportHeight / 2 : viewportWidth\n    );\n\n    this.screen.setPixelScale(this.calculatedScreenDimensions);\n\n    if (this.calculatedScreenDimensions / this.screen.dimensions > this.screen.pixelScale) { // ie: anti aliasing threshold exceeded\n      this.calculatedScreenDimensions = this.screen.dimensions * this.screen.pixelScale;\n    }\n\n    this.screen.element.width = this.calculatedScreenDimensions;\n    this.screen.element.height = this.calculatedScreenDimensions;\n\n    this.positionAndScaleElements(viewportWidth, viewportHeight, viewportIsLandscape);\n  }\n\n  private positionAndScaleElements (\n    viewportWidth: number,\n    viewportHeight: number,\n    viewportIsLandscape: boolean\n  ): void {\n    const screenLeft = viewportWidth / 2 - this.calculatedScreenDimensions / 2;\n    const screenTop = viewportHeight / 2 - (viewportIsLandscape ? this.calculatedScreenDimensions / 2 : this.calculatedScreenDimensions);\n    const leftConLeft = viewportIsLandscape ? screenLeft - this.calculatedScreenDimensions / 2 : screenLeft;\n    const leftConTop = viewportIsLandscape ? screenTop : screenTop + this.calculatedScreenDimensions;\n    const rightConLeft = viewportIsLandscape ? screenLeft + this.calculatedScreenDimensions : screenLeft + this.calculatedScreenDimensions / 2;\n    const rightConTop = viewportIsLandscape ? screenTop : screenTop + this.calculatedScreenDimensions;\n    const conWidth = this.calculatedScreenDimensions / 2;\n    const conHeight = this.calculatedScreenDimensions;\n    \n    const dPadDimensions = conWidth / 1.5;\n    const dPadIndividualButtonDimensions = dPadDimensions / 3;\n    const dPadLeft = (leftConLeft + conWidth / 2) - dPadDimensions / 2;\n    const dPadTop = (leftConTop + conHeight / 2) - dPadDimensions / 2;\n\n    (() => {\n      let x = 0;\n      let y = 0;\n\n      this.buttons.dPadButtons.forEach((item) => {\n        item.element!.style.left = `${x * dPadIndividualButtonDimensions}px`;\n        item.element!.style.top = `${y * dPadIndividualButtonDimensions}px`;\n        item.element!.style.width = `${dPadIndividualButtonDimensions}px`;\n        item.element!.style.height = `${dPadIndividualButtonDimensions}px`;\n\n        y = x === 2 ? y + 1 : y;\n        x = x !== 2 ? x + 1 : 0;\n      });\n    })();\n\n    const actionBtnsWidth = conWidth / 1.5;\n    const actionBtnsHeight = actionBtnsWidth / 1.2;\n    const actionBtnDimensions = conWidth / 3.5;\n    const actionBtnCenterX = rightConLeft + conWidth / 2;\n    const actionBtnCenterY = rightConTop + conHeight / 2;\n    \n    this.screen.element.style.left = `${screenLeft}px`;\n    this.screen.element.style.top = `${screenTop}px`;\n    \n    this.buttons.dPadElement.style.left = `${dPadLeft}px`;\n    this.buttons.dPadElement.style.top = `${dPadTop}px`;\n    this.buttons.dPadElement.style.width = `${dPadDimensions}px`;\n    this.buttons.dPadElement.style.height = `${dPadDimensions}px`;\n\n    this.buttons.dPadElement.style.left = `${dPadLeft}px`;\n    this.buttons.dPadElement.style.top = `${dPadTop}px`;\n    this.buttons.dPadElement.style.width = `${dPadDimensions}px`;\n    this.buttons.dPadElement.style.height = `${dPadDimensions}px`;\n    \n    this.buttons.actionBtnsElement.style.left = `${actionBtnCenterX - actionBtnsWidth / 2}px`;\n    this.buttons.actionBtnsElement.style.top = `${actionBtnCenterY - actionBtnsHeight / 2}px`;\n    this.buttons.actionBtnsElement.style.width = `${actionBtnsWidth}px`;\n    this.buttons.actionBtnsElement.style.height = `${actionBtnsHeight}px`;\n\n    this.buttons.actionBtnIElement.style.left = `0`;\n    this.buttons.actionBtnIElement.style.top = `${actionBtnsHeight - actionBtnDimensions}px`;\n    this.buttons.actionBtnIElement.style.width = `${actionBtnDimensions}px`;\n    this.buttons.actionBtnIElement.style.height = `${actionBtnDimensions}px`;\n    \n    this.buttons.actionBtnIIElement.style.left = `${actionBtnsWidth - actionBtnDimensions}px`;\n    this.buttons.actionBtnIIElement.style.top = `0`;\n    this.buttons.actionBtnIIElement.style.width = `${actionBtnDimensions}px`;\n    this.buttons.actionBtnIIElement.style.height = `${actionBtnDimensions}px`;\n\n    this.leftConElement.style.left = `${leftConLeft}px`;\n    this.leftConElement.style.top = `${leftConTop}px`;\n    this.leftConElement.style.width = `${conWidth}px`;\n    this.leftConElement.style.height = `${conHeight}px`;\n\n    this.rightConElement.style.left = `${rightConLeft}px`;\n    this.rightConElement.style.top = `${rightConTop}px`;\n    this.rightConElement.style.width = `${conWidth}px`;\n    this.rightConElement.style.height = `${conHeight}px`;\n  }\n}\n"],"names":["$e8ce64631166e29a$export$aaf181f39380b0fc","point","rect","x","right","y","bottom","$b87507472c4fc21b$export$baf26146a414f24a","this","DPadButtons","$97b231d28a326e92$var$DPadButtons","$e6b70c27f001525d$var$buttons","dPadButtons","name","LtUp","element","Up","RtUp","Lt","Center","Rt","LtDn","Dn","RtDn","isLtUpPressed","isUpPressed","isRtUpPressed","isLtPressed","isRtPressed","isLtDnPressed","isDnPressed","isRtDnPressed","dPadElement","document","querySelector","forEach","item","actionBtnsElement","actionBtnIElement","actionBtnIIElement","addEventListener","event","setActiveDPadElements","find","target","id","preventDefault","classList","remove","firstTouch","touches","pageX","pageY","getBoundingClientRect","add","item1","$e6b70c27f001525d$var$screen","dimensions","pixelScale","antiAliasingScaleThreshold","context","getContext","imageSmoothingEnabled","imageSmoothingQuality","setPixelScale","calculatedScreenDimensions","scale","Math","floor","params","screen","buttons","leftConElement","rightConElement","e","calculatePositionAndScale","window","viewportWidth","innerWidth","viewportHeight","innerHeight","viewportIsLandscape","width","height","positionAndScaleElements","screenLeft","screenTop","leftConLeft","leftConTop","rightConLeft","rightConTop","conWidth","conHeight","dPadDimensions","dPadIndividualButtonDimensions","dPadLeft","dPadTop","style","left","top","actionBtnsWidth","actionBtnsHeight","actionBtnDimensions","actionBtnCenterX","actionBtnCenterY"],"version":3,"file":"index.02a546d0.js.map"}